<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pgloader</title>
    <link>https://pgloader.io/</link>
    <description>Recent content on pgloader</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://pgloader.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Migrating to PostgreSQL, the White Paper</title>
      <link>https://pgloader.io/blog/migrating-to-postgresql-the-white-paper/</link>
      <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pgloader.io/blog/migrating-to-postgresql-the-white-paper/</guid>
      <description>After having been involved in many migration projects in the last 10 years, I decided to publish the following White Paper in order to share my learnings.
The paper is titled Migrating to PostgreSQL, Tools and Methodology and proposed the Continuous Migration approach. Get the book now:
 Continuous Migration makes it easy to make incremental progress over a period of time, and also to pause and resume the migration work later on, should you need to do that.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://pgloader.io/about/</link>
      <pubDate>Thu, 21 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pgloader.io/about/</guid>
      <description>pgloader loads data into PostgreSQL. It knows how to load data from several kinds of source:
 Files Live Databases  Let&amp;rsquo;s dive into those two different behaviours of pgloader, starting with its support for migrating a whole database from a connection string.
Loading data from Files You might have to process huge CSV files from time to time. For example if you&amp;rsquo;re in the telco business, those might be Call Detail Records.</description>
    </item>
    
    <item>
      <title>Continuous Migration</title>
      <link>https://pgloader.io/blog/continuous-migration/</link>
      <pubDate>Thu, 21 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pgloader.io/blog/continuous-migration/</guid>
      <description>After having been involved in many migration projects over the last 10 years, I decided to publish the following White Paper in order to share my learnings.
The paper is titled Migrating to PostgreSQL, Tools and Methodology and details the Continuous Migration approach. It describes how to migrate from another relational database server technology to PostgreSQL. The reasons to do so are many, and first among them is often the licensing model.</description>
    </item>
    
    <item>
      <title>pgloader, Your Migration Companion</title>
      <link>https://pgloader.io/blog/pgloader-your-migration-companion/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pgloader.io/blog/pgloader-your-migration-companion/</guid>
      <description>PostgreSQL Conference Europe 2017 PGConf.EU is a unique chance for European PostgreSQL users and developers to catch up, learn, build relationships, get to know each other and consolidate a real network of professionals that use and work with PostgreSQL.
pgloader, your migration companion Migrating data from another RDBMS to PostgreSQL should be really easy. After all itâ€™s all relations and tables and the same data types everywhere or abouts, with text, dates and numbers.</description>
    </item>
    
    <item>
      <title>Home</title>
      <link>https://pgloader.io/home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pgloader.io/home/</guid>
      <description>pgloader loads data into PostgreSQL and allows you to implement Continuous Migration from your current database to PostgreSQL. Read the White Paper to learn how to limit risks and control your budget, and start your PostgreSQL migration today!
 Introduction   pgloader has two modes of operation. It can either load data from files, such as CSV or Fixed-File Format; or migrate a whole database to PostgreSQL.
pgloader supports several RDBMS solutions as a migration source, and fetches information from the catalog tables over a connection to then create an equivalent schema in PostgreSQL.</description>
    </item>
    
    <item>
      <title>Licensing</title>
      <link>https://pgloader.io/licensing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pgloader.io/licensing/</guid>
      <description>pgloader is Open Source. Purchase a Moral License to support the development of pgloader and get priority tracking for the issues that matter to you, in the context of your project.</description>
    </item>
    
    <item>
      <title>RoadMap</title>
      <link>https://pgloader.io/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pgloader.io/roadmap/</guid>
      <description>Some of the items in the pgloader Road Map will only happen given some financial contributions to the project. You are most welcome to participate into the progress of pgloader!
The following projects are part of the pgloader Road Map, and after you&amp;rsquo;ve bought a pgloader Moral Licence you are entitled to vote for them so see them delivered in a time frame that makes sense for your migration projects.</description>
    </item>
    
    <item>
      <title>Services</title>
      <link>https://pgloader.io/services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pgloader.io/services/</guid>
      <description>As detailed in the Migrating to PostgreSQL White Paper a database migration to PostgreSQL is set-up in the following 4 steps:
 Data migration Code migration (SQL, Stored Procedure, Application Architecture, etc) Service migration (maintenance window) Opportunity cost   We can help you at any step above, thanks to our network of Postgres professionals. We have collectively handled hundreds of migrations to Postgres, taking into account many different situations, constraints, and platforms.</description>
    </item>
    
    <item>
      <title>White Paper</title>
      <link>https://pgloader.io/white-paper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pgloader.io/white-paper/</guid>
      <description>The pgloader tool is meant to allow one to implement the Continuous Migration project methodology when migrating to PostgreSQL. This methodology is meant to reduce risks inherent to such complex projects.
After having been involved in many migration projects in the past, I decided to publish a White Paper about this project methodology!
Migrating to PostgreSQL, Tools and Methodology  The migration method proposed here is called Continuous Migration.</description>
    </item>
    
  </channel>
</rss>
